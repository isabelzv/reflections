What happens when you initialize a repository? Why do you need to do it?
git starts to track the files in the directory in which the git repository was initialized. 
a git file doesn't automatically exist in a directory, it must be created. 

How is the staging area different from the working directory and the repository? What value do you think it offers?
working directory has the files in their current state or whatever state they were in, if you choose to checkout a 
previous commit. The staging area is used to hold files on which you want to make a commit. 
You may want to make changes to some files (if you previously created a bug), but not others (if you created valuable changes).

How can you use the staging area to make sure you have one commit per logical change?
By using git add and then git diff (...???) to check the diff between the files already commited and those you are about to commit. 

What are some situations when branches would be helpful in keeping your history organized? How would branches help?
experiments in programming, different languages, mobile site vs desktop site, different levels for games. 

How do the diagrams help you visualize the branch structure?
by showing it's logic and it's non-linearness.

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?
you get the updates from both of them. To show the history of the commits.